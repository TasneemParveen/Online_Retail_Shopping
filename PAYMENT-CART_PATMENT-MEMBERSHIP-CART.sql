
--SEQUENCE FOR CART

CREATE SEQUENCE CART_SEQ
    START WITH 1000
    INCREMENT BY 1;

--TRIGGER TO ADD CART WHEN CUSTOMER INSERTED

CREATE OR REPLACE TRIGGER ADD_CART
AFTER INSERT  ON CUSTOMER
FOR EACH ROW 
DECLARE 
   CART_ID1 VARCHAR(10) :=  CART_SEQ.NEXTVAL;
BEGIN 
    INSERT INTO CART VALUES(CART_ID1,:NEW.CUSTOMER_ID,0,'NOT_DELIVERED','ACTIVE');
    DBMS_OUTPUT.PUT_LINE('YOUR CUSTOMER_ID IS : '||:NEW.CUSTOMER_ID||'NEW CART_ID IS : '||CART_ID1);
END; 


----SEQUENCE TO CREATE PAYMENT_ID

CREATE SEQUENCE PAYMENT_SEQ
    START WITH 10000
    INCREMENT BY 1;





--TO CHECK PRIME IS IN CART
CREATE OR REPLACE FUNCTION CHECK_PRIME(CART_ID1 VARCHAR)
RETURN VARCHAR
AS
    NAME1 VARCHAR(50);
BEGIN
    FOR CU IN (SELECT PRODUCT_NAME FROM PRODUCT P INNER JOIN CART_PRODUCT CP ON CP.PRODUCT_ID = P.PRODUCT_ID WHERE CART_ID=CART_ID1)
    LOOP
        IF CU.PRODUCT_NAME LIKE 'PRIME MEMBERSHIP' THEN
            RETURN 'YES';
        END IF;
    END LOOP;
    RETURN 'NO';
END CHECK_PRIME;




--TO ADD PRIME MEMBERSHIP
CREATE OR REPLACE  PROCEDURE ADD_MEMBERSHIP(CART_ID1  IN VARCHAR2, COUNT1 NUMBER) 
IS
    DU NUMBER; 
    C_ID VARCHAR(10);
BEGIN 
    -- Update  TOTAL FEES
    SELECT CUSTOMER_ID INTO C_ID FROM CART WHERE CART_ID LIKE CART_ID1;
    SELECT  DURATION INTO DU FROM MEMBERSHIP WHERE USER_ID LIKE C_ID;
    -- Printing the total fees
    UPDATE MEMBERSHIP SET DURATION = DU+COUNT1 WHERE USER_ID LIKE C_ID;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        INSERT INTO MEMBERSHIP VALUES('PRIME',C_ID,SYSDATE,COUNT1);
END ADD_MEMBERSHIP; 




----PROCEDURE TO INSERT/UPDATE INTO PAYMENTS AND CART_PAYMENT AND MEMBERSHIP AND CART

ALTER TABLE "CART_PRODUCT" DISABLE ALL TRIGGERS;


CREATE OR REPLACE PROCEDURE MAKE_PAYMENT(CUST_ID VARCHAR,CRT_ID VARCHAR,PAY_MODE VARCHAR) AS
    
    T_PRICE CART.TOTAL_PRICE%TYPE;
    PAY_ID NUMBER := PAYMENT_SEQ.NEXTVAL;
    COUNT1 NUMBER;
    N_CRT_ID NUMBER;
BEGIN
    SELECT TOTAL_PRICE INTO T_PRICE FROM CART WHERE CART_ID LIKE CRT_ID AND CUSTOMER_ID LIKE CUST_ID;
    INSERT INTO PAYMENT VALUES (PAY_ID,CUST_ID,T_PRICE,PAY_MODE,SYSDATE,'SUCCESS');
    IF CHECK_PRIME(CRT_ID) LIKE 'YES' THEN
        SELECT COUNT(*) INTO COUNT1 FROM  PRODUCT P INNER JOIN CART_PRODUCT CP ON CP.PRODUCT_ID = P.PRODUCT_ID WHERE P.PRODUCT_ID LIKE '1005' AND CART_ID LIKE CRT_ID;
        ADD_MEMBERSHIP(CRT_ID,COUNT1);
    END IF;
    INSERT INTO CART_PAYMENT VALUES(CRT_ID,PAY_ID);
    UPDATE CART SET CART_STATUS = 'DEACTIVE',DELIVERY_STATUS = 'DELIVERED' WHERE CART_ID LIKE CRT_ID;  
    N_CRT_ID := CART_SEQ.NEXTVAL;
    INSERT INTO CART VALUES(N_CRT_ID,CUST_ID,0,'NOT_DELIVERED','ACTIVE');
    DBMS_OUTPUT.PUT_LINE( 'PAYMENT SUCCESS');
    DBMS_OUTPUT.PUT_LINE('YOUR CUSTOMER_ID IS : '||CUST_ID||' AND NEW CART_ID IS : '||N_CRT_ID);
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.put_line ('COMBINATION OF CUSTOMER_ID AND CART_ID DOES NOT EXIST');
END MAKE_PAYMENT;


